/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ortiz.sound.visao;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

import org.apache.commons.lang.StringUtils;
import org.jfree.chart.ChartPanel;

import ortiz.sound.analisador.AnalisadorSom;
import ortiz.sound.capturador.CapturadorSom;
import ortiz.sound.capturador.CapturadorSomException;
import ortiz.sound.modelo.DadosAnalise;
import ortiz.sound.partitura.GeradorPartituras;
import ortiz.sound.partitura.GeradorPartiturasException;
import ortiz.sound.patterns.observador.ObservadorFimAnaliseSom;

/**
 * 
 * <p>
 *	Classe visual  <br/>
 *	Data: 05/07/2012 <br/>
 * </p>
 * 
 * @author marcelo.ortiz
 */
public class GUI extends javax.swing.JFrame implements ObservadorFimAnaliseSom {
    
    private CapturadorSom capturadorSom;
    private AnalisadorSom analisadorSom;
    private DadosAnalise dadosAnalise;

    /**
     * Creates new form HarmonizadorGUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
            panelCapturador = new javax.swing.JPanel();
            btCapturarSom = new javax.swing.JButton();
            btPararCaptura = new javax.swing.JButton();
            panelGraficos = new javax.swing.JPanel();
            panelGraficoMusicaTempo = new javax.swing.JPanel();


            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("Gerador Partitura");
            setBackground(new java.awt.Color(255, 255, 255));
            setMaximumSize(new java.awt.Dimension(670, 501));
            setName("framePrincipal"); // NOI18N

            panelCapturador.setBackground(new java.awt.Color(255, 255, 255));
            panelCapturador.setBorder(javax.swing.BorderFactory.createTitledBorder("Controle"));

            btCapturarSom.setText("Capturar Som");
            btCapturarSom.setEnabled(false);
            btCapturarSom.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btCapturarSomActionPerformed(evt);
                }
            });

            btPararCaptura.setText("Parar Captura");
            btPararCaptura.setEnabled(false);
            btPararCaptura.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btPararCapturaActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout panelCapturadorLayout = new javax.swing.GroupLayout(panelCapturador);
            panelCapturador.setLayout(panelCapturadorLayout);
            panelCapturadorLayout.setHorizontalGroup(
                panelCapturadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCapturadorLayout.createSequentialGroup()
                    .addComponent(btCapturarSom)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btPararCaptura)
                    .addContainerGap(428, Short.MAX_VALUE))
            );
            panelCapturadorLayout.setVerticalGroup(
                panelCapturadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelCapturadorLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(panelCapturadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btCapturarSom)
                        .addComponent(btPararCaptura))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            panelGraficos.setBackground(new java.awt.Color(255, 255, 255));
            panelGraficos.setBorder(javax.swing.BorderFactory.createTitledBorder("Gráfico"));

            panelGraficoMusicaTempo.setBackground(new java.awt.Color(255, 255, 255));
            panelGraficoMusicaTempo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
            panelGraficoMusicaTempo.setOpaque(false);
            panelGraficoMusicaTempo.setPreferredSize(new java.awt.Dimension(650, 338));
            panelGraficoMusicaTempo.setRequestFocusEnabled(false);
            panelGraficoMusicaTempo.setVerifyInputWhenFocusTarget(false);

            javax.swing.GroupLayout panelGraficoMusicaTempoLayout = new javax.swing.GroupLayout(panelGraficoMusicaTempo);
            panelGraficoMusicaTempo.setLayout(panelGraficoMusicaTempoLayout);
            panelGraficoMusicaTempoLayout.setHorizontalGroup(
                panelGraficoMusicaTempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 0, Short.MAX_VALUE)
            );
            panelGraficoMusicaTempoLayout.setVerticalGroup(
                panelGraficoMusicaTempoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 296, Short.MAX_VALUE)
            );

            javax.swing.GroupLayout panelGraficosLayout = new javax.swing.GroupLayout(panelGraficos);
            panelGraficos.setLayout(panelGraficosLayout);
            panelGraficosLayout.setHorizontalGroup(
                panelGraficosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGraficosLayout.createSequentialGroup()
                    .addComponent(panelGraficoMusicaTempo, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
                    .addContainerGap())
            );
            panelGraficosLayout.setVerticalGroup(
                panelGraficosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelGraficosLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelGraficoMusicaTempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelGraficos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelCapturador, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelGraficos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(panelCapturador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(74, 74, 74))
            );

            pack();
        }// </editor-fold>

    private void btCapturarSomActionPerformed(java.awt.event.ActionEvent evt) {                                              
        this.btCapturarSom.setEnabled(false);
        this.btPararCaptura.setEnabled(true);
        
        this.analisadorSom = new AnalisadorSom();
        this.analisadorSom.registrarObservador(this);
        
        this.capturadorSom = new CapturadorSom();
        this.capturadorSom.adicionarObservador(this.analisadorSom);
        
                
        try {
            this.capturadorSom.capturar();
        } catch (CapturadorSomException ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
            exibirErro(ex, null);
        } catch (Exception ex) {
        	Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
        	exibirErro(ex, "Ocorreu um erro inesperado.");
        }
        
    }                                             

    /**
     * 
     * <p>
     * TODO Inserir a descricao do metodo
     * </p>
     *
     * @param evt
     */
    private void btPararCapturaActionPerformed(java.awt.event.ActionEvent evt) {
    	
    	this.dadosAnalise = null;    	
        this.btPararCaptura.setEnabled(false);    	
        this.capturadorSom.parar();
        // quando a analise parar, o método finalizouAnalise será chamado
    }
    
    @Override
	public void finalizouAnalise(DadosAnalise dadosAnalise) {
		
    	this.dadosAnalise = dadosAnalise;
    	
    	RenderizadorFreeChart renderizadorFreeChart = new RenderizadorFreeChart();
        ChartPanel chartPanel = renderizadorFreeChart.obterGraficoMusica(this.dadosAnalise.getFrameRate(), this.dadosAnalise.getAmostras());
        chartPanel.setAutoscrolls(true);
        chartPanel.setSize(this.panelGraficoMusicaTempo.getPreferredSize());
        chartPanel.setVisible(true);
        
        this.panelGraficoMusicaTempo.removeAll();
        this.panelGraficoMusicaTempo.setSize(this.panelGraficoMusicaTempo.getPreferredSize());
        this.panelGraficoMusicaTempo.add(chartPanel);
        this.panelGraficoMusicaTempo.repaint();
        
    	apresentarDialogoEscolhaArquivo();
        
        this.btCapturarSom.setEnabled(true);
		
	}

    /**
     * 
     * <p>
     * TODO Inserir a descricao do metodo
     * </p>
     *
     * @return
     */
    private String apresentarDialogoEscolhaArquivo() {
        String nomeArquivo = null;
    	JFileChooser chooser = new JFileChooser();
    	chooser.setAcceptAllFileFilterUsed(false);
    	chooser.setDialogTitle("Salvar Arquivo");
    	chooser.setApproveButtonText("Salvar");
    	chooser.setApproveButtonToolTipText("Salvar arquivo");
		chooser.setCurrentDirectory(new File("."));
		chooser.setFileFilter(new FileFilter() {
			public boolean accept(File f) {
				return f.isDirectory();
			}

			public String getDescription() {
				return "Diretório";
			}
		});
		
		int r = chooser.showOpenDialog(this);
		if (r == JFileChooser.APPROVE_OPTION) {
			nomeArquivo = chooser.getSelectedFile().getPath();
			GeradorPartituras gerador = new GeradorPartituras();
			try {
				gerador.gerarPartitura(this.dadosAnalise.getListaNotasMusicaisTempo(), new File(String.format("%s.xml", nomeArquivo)));
			} catch (GeradorPartiturasException e) {
				 exibirErro(e, null);
			}
			
		} else if (r == JFileChooser.CANCEL_OPTION) {
			System.out.println("cancelou");
		}

        return nomeArquivo;
    }
    
    /**
     * 
     * <p>
     * TODO Inserir a descricao do metodo
     * </p>
     *
     * @param e
     * @param mensagemErro
     */
    private void exibirErro(Exception e, String mensagemErro) {
		String erro = StringUtils.defaultString(mensagemErro, e.getMessage());
    	
    	JOptionPane.showMessageDialog(this, erro, "Erro",
				JOptionPane.ERROR_MESSAGE);
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        GUI harmonizador = new GUI();
        harmonizador.setVisible(true);
        harmonizador.getBtCapturarSom().setEnabled(true);

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btCapturarSom;
    private javax.swing.JButton btPararCaptura;
    private javax.swing.JPanel panelCapturador;
    private javax.swing.JPanel panelGraficoMusicaTempo;
    private javax.swing.JPanel panelGraficos;
    // End of variables declaration

    public JButton getBtCapturarSom() {
        return btCapturarSom;
    }
}