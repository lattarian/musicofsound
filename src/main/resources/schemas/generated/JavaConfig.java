//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.03 at 07:23:17 PM BRT 
//


package generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "profiler",
    "jvmOptionsOrProperty"
})
@XmlRootElement(name = "java-config")
public class JavaConfig {

    @XmlAttribute(name = "java-home")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String javaHome;
    @XmlAttribute(name = "debug-enabled")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String debugEnabled;
    @XmlAttribute(name = "debug-options")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String debugOptions;
    @XmlAttribute(name = "rmic-options")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String rmicOptions;
    @XmlAttribute(name = "javac-options")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String javacOptions;
    @XmlAttribute(name = "classpath-prefix")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String classpathPrefix;
    @XmlAttribute(name = "classpath-suffix")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String classpathSuffix;
    @XmlAttribute(name = "server-classpath")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String serverClasspath;
    @XmlAttribute(name = "system-classpath")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String systemClasspath;
    @XmlAttribute(name = "native-library-path-prefix")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String nativeLibraryPathPrefix;
    @XmlAttribute(name = "native-library-path-suffix")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String nativeLibraryPathSuffix;
    @XmlAttribute(name = "bytecode-preprocessors")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String bytecodePreprocessors;
    @XmlAttribute(name = "env-classpath-ignored")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String envClasspathIgnored;
    protected Profiler profiler;
    @XmlElements({
        @XmlElement(name = "jvm-options", type = JvmOptions.class),
        @XmlElement(name = "property", type = Property.class)
    })
    protected List<Object> jvmOptionsOrProperty;

    /**
     * Gets the value of the javaHome property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJavaHome() {
        if (javaHome == null) {
            return "${com.sun.aas.javaRoot}";
        } else {
            return javaHome;
        }
    }

    /**
     * Sets the value of the javaHome property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJavaHome(String value) {
        this.javaHome = value;
    }

    /**
     * Gets the value of the debugEnabled property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDebugEnabled() {
        if (debugEnabled == null) {
            return "false";
        } else {
            return debugEnabled;
        }
    }

    /**
     * Sets the value of the debugEnabled property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDebugEnabled(String value) {
        this.debugEnabled = value;
    }

    /**
     * Gets the value of the debugOptions property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDebugOptions() {
        if (debugOptions == null) {
            return "-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n";
        } else {
            return debugOptions;
        }
    }

    /**
     * Sets the value of the debugOptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDebugOptions(String value) {
        this.debugOptions = value;
    }

    /**
     * Gets the value of the rmicOptions property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRmicOptions() {
        if (rmicOptions == null) {
            return "-iiop -poa -alwaysgenerate -keepgenerated -g";
        } else {
            return rmicOptions;
        }
    }

    /**
     * Sets the value of the rmicOptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRmicOptions(String value) {
        this.rmicOptions = value;
    }

    /**
     * Gets the value of the javacOptions property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getJavacOptions() {
        if (javacOptions == null) {
            return "-g";
        } else {
            return javacOptions;
        }
    }

    /**
     * Sets the value of the javacOptions property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setJavacOptions(String value) {
        this.javacOptions = value;
    }

    /**
     * Gets the value of the classpathPrefix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClasspathPrefix() {
        return classpathPrefix;
    }

    /**
     * Sets the value of the classpathPrefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClasspathPrefix(String value) {
        this.classpathPrefix = value;
    }

    /**
     * Gets the value of the classpathSuffix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClasspathSuffix() {
        return classpathSuffix;
    }

    /**
     * Sets the value of the classpathSuffix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClasspathSuffix(String value) {
        this.classpathSuffix = value;
    }

    /**
     * Gets the value of the serverClasspath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getServerClasspath() {
        return serverClasspath;
    }

    /**
     * Sets the value of the serverClasspath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setServerClasspath(String value) {
        this.serverClasspath = value;
    }

    /**
     * Gets the value of the systemClasspath property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSystemClasspath() {
        return systemClasspath;
    }

    /**
     * Sets the value of the systemClasspath property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSystemClasspath(String value) {
        this.systemClasspath = value;
    }

    /**
     * Gets the value of the nativeLibraryPathPrefix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNativeLibraryPathPrefix() {
        return nativeLibraryPathPrefix;
    }

    /**
     * Sets the value of the nativeLibraryPathPrefix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNativeLibraryPathPrefix(String value) {
        this.nativeLibraryPathPrefix = value;
    }

    /**
     * Gets the value of the nativeLibraryPathSuffix property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getNativeLibraryPathSuffix() {
        return nativeLibraryPathSuffix;
    }

    /**
     * Sets the value of the nativeLibraryPathSuffix property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setNativeLibraryPathSuffix(String value) {
        this.nativeLibraryPathSuffix = value;
    }

    /**
     * Gets the value of the bytecodePreprocessors property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBytecodePreprocessors() {
        return bytecodePreprocessors;
    }

    /**
     * Sets the value of the bytecodePreprocessors property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBytecodePreprocessors(String value) {
        this.bytecodePreprocessors = value;
    }

    /**
     * Gets the value of the envClasspathIgnored property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEnvClasspathIgnored() {
        if (envClasspathIgnored == null) {
            return "true";
        } else {
            return envClasspathIgnored;
        }
    }

    /**
     * Sets the value of the envClasspathIgnored property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEnvClasspathIgnored(String value) {
        this.envClasspathIgnored = value;
    }

    /**
     * Gets the value of the profiler property.
     * 
     * @return
     *     possible object is
     *     {@link Profiler }
     *     
     */
    public Profiler getProfiler() {
        return profiler;
    }

    /**
     * Sets the value of the profiler property.
     * 
     * @param value
     *     allowed object is
     *     {@link Profiler }
     *     
     */
    public void setProfiler(Profiler value) {
        this.profiler = value;
    }

    /**
     * Gets the value of the jvmOptionsOrProperty property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the jvmOptionsOrProperty property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getJvmOptionsOrProperty().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JvmOptions }
     * {@link Property }
     * 
     * 
     */
    public List<Object> getJvmOptionsOrProperty() {
        if (jvmOptionsOrProperty == null) {
            jvmOptionsOrProperty = new ArrayList<Object>();
        }
        return this.jvmOptionsOrProperty;
    }

}
